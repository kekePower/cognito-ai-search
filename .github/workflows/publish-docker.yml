name: Publish Docker Image to Docker Hub

# This workflow will trigger when a new Release is "published" in your GitHub repository.
on:
  release:
    types: [published] # Triggers only when you hit the "Publish release" button on GitHub

jobs:
  build-and-push-to-dockerhub:
    name: Build and Push to Docker Hub
    runs-on: ubuntu-latest # Use a standard Linux environment for the job

    steps:
      - name: Checkout code
        uses: actions/checkout@v4 # Action to get your repository's code into the runner

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }} # Your Docker Hub username
          password: ${{ secrets.DOCKERHUB_TOKEN }}    # The Access Token you generated

      - name: Extract metadata (tags, labels) for Docker
        id: meta # Give this step an ID so we can refer to its output
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKERHUB_USERNAME }}/cognito-ai-search # Use your Docker Hub username and repo name
          # This configuration will create several tags:
          # 1. The Git tag of the release (e.g., v1.0.0, v1.0.1)
          # 2. 'latest' tag for the most recent release
          tags: |
            type=semver,pattern={{version}}  # e.g., v1.2.3
            type=semver,pattern={{major}}.{{minor}} # e.g., v1.2
            type=raw,value=latest,enable={{is_default_branch}} # Creates 'latest'

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: . # Path to the directory containing your Dockerfile (root of your repo)
          push: true # Actually push the image to the registry
          tags: ${{ steps.meta.outputs.tags }} # Use the tags generated by the metadata-action
          labels: ${{ steps.meta.outputs.labels }} # Add labels generated by the metadata-action
